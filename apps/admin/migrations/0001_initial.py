# Generated by Django 2.2.5 on 2019-09-16 14:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cellphone', models.CharField(max_length=32, null=True, unique=True, verbose_name='手机号')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='电子邮件')),
                ('id_card', models.CharField(max_length=32, null=True, unique=True, verbose_name='身份证')),
                ('gender', models.IntegerField(choices=[(1, 'MALE'), (2, 'FEMALE'), (0, 'UNKNOWN')], default=0, null=True, verbose_name='性别')),
                ('avatar', models.ImageField(null=True, upload_to='', verbose_name='头像')),
                ('birthday', models.DateField(null=True, verbose_name='出生日期')),
                ('configure', django_mysql.models.JSONField(default=dict, null=True, verbose_name='用户配置')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 's_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('operate', models.CharField(max_length=32, verbose_name='操作')),
            ],
            options={
                'verbose_name': '行为',
                'verbose_name_plural': '行为',
                'db_table': 's_action',
            },
        ),
        migrations.CreateModel(
            name='DenyIP',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('ip', models.GenericIPAddressField(verbose_name='IP地址')),
                ('open_data', models.DateTimeField(auto_now=True, null=True, verbose_name='解封时间')),
            ],
            options={
                'verbose_name': 'IP黑名单',
                'verbose_name_plural': 'IP黑名单',
                'db_table': 's_deny_ip',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
            ],
            options={
                'verbose_name': '组',
                'verbose_name_plural': '组',
                'db_table': 's_group',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('icon', models.CharField(max_length=32, null=True, verbose_name='图标')),
                ('url', models.CharField(max_length=128, null=True, verbose_name='地址')),
                ('is_outer', models.BooleanField(default=False, verbose_name='是否外链')),
                ('order', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='排序')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='admin.Menu', verbose_name='父菜单')),
            ],
            options={
                'verbose_name': '菜单',
                'verbose_name_plural': '菜单',
                'db_table': 's_menu',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('address', models.CharField(max_length=256, null=True, verbose_name='地址')),
                ('charge', models.CharField(max_length=64, null=True, verbose_name='负责人')),
                ('phone', models.CharField(max_length=32, null=True, verbose_name='联系电话')),
                ('position', django_mysql.models.JSONField(default=dict, null=True, verbose_name='经纬度')),
                ('order', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='排序')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin.Organization', verbose_name='父机构')),
            ],
            options={
                'verbose_name': '机构',
                'verbose_name_plural': '机构',
                'db_table': 's_organization',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 's_role',
            },
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('code', models.CharField(max_length=6, verbose_name='验证码')),
                ('cellphone', models.CharField(max_length=32, verbose_name='手机号')),
            ],
            options={
                'verbose_name': '验证码',
                'verbose_name_plural': '验证码',
                'db_table': 's_verify_code',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户-角色',
                'verbose_name_plural': '用户-角色',
                'db_table': 's_r_user_role',
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='UserOrganization',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '机构-用户',
                'verbose_name_plural': '机构-用户',
                'db_table': 's_r_user_organization',
                'unique_together': {('user', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户-组',
                'verbose_name_plural': '用户-组',
                'db_table': 's_r_user_group',
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='RoleMenu',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Menu', verbose_name='菜单')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色-菜单',
                'verbose_name_plural': '角色-菜单',
                'db_table': 's_r_role_menu',
                'unique_together': {('role', 'menu')},
            },
        ),
        migrations.CreateModel(
            name='RoleAction',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Action', verbose_name='行为')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色-行为',
                'verbose_name_plural': '角色-行为',
                'db_table': 's_r_role_action',
                'unique_together': {('role', 'action')},
            },
        ),
        migrations.AddField(
            model_name='role',
            name='actions',
            field=models.ManyToManyField(through='admin.RoleAction', to='admin.Action', verbose_name='包含行为'),
        ),
        migrations.AddField(
            model_name='role',
            name='menus',
            field=models.ManyToManyField(through='admin.RoleMenu', to='admin.Menu', verbose_name='包含菜单'),
        ),
        migrations.CreateModel(
            name='GroupRole',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Group', verbose_name='组')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '组-角色',
                'verbose_name_plural': '组-角色',
                'db_table': 's_r_group_role',
                'unique_together': {('group', 'role')},
            },
        ),
        migrations.CreateModel(
            name='GroupMenu',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Group', verbose_name='组')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Menu', verbose_name='菜单')),
            ],
            options={
                'verbose_name': '组-菜单',
                'verbose_name_plural': '组-菜单',
                'db_table': 's_r_group_menu',
                'unique_together': {('group', 'menu')},
            },
        ),
        migrations.CreateModel(
            name='GroupAction',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Action', verbose_name='行为')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin.Group', verbose_name='组')),
            ],
            options={
                'verbose_name': '组-行为',
                'verbose_name_plural': '组-行为',
                'db_table': 's_r_group_action',
                'unique_together': {('group', 'action')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='actions',
            field=models.ManyToManyField(through='admin.GroupAction', to='admin.Action', verbose_name='包含行为'),
        ),
        migrations.AddField(
            model_name='group',
            name='menus',
            field=models.ManyToManyField(through='admin.GroupMenu', to='admin.Menu', verbose_name='包含菜单'),
        ),
        migrations.AddField(
            model_name='group',
            name='roles',
            field=models.ManyToManyField(through='admin.GroupRole', to='admin.Role', verbose_name='包含角色'),
        ),
        migrations.CreateModel(
            name='DenyAccount',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='主键')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('modified_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('desc', models.CharField(max_length=512, null=True, verbose_name='备注信息')),
                ('open_data', models.DateTimeField(auto_now=True, null=True, verbose_name='解封时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '账号黑名单',
                'verbose_name_plural': '账号黑名单',
                'db_table': 's_deny_account',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(through='admin.UserGroup', to='admin.Group', verbose_name='用户-组'),
        ),
        migrations.AddField(
            model_name='user',
            name='organizations',
            field=models.ManyToManyField(through='admin.UserOrganization', to='admin.Organization', verbose_name='用户-机构'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(through='admin.UserRole', to='admin.Role', verbose_name='用户-角色'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
